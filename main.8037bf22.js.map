{"version":3,"sources":["scripts/main.js"],"names":["basicURL","request","url","fetch","then","response","ok","Error","status","json","getIDsArray","array","arrayOfIds","forEach","element","push","id","getFirstReceivedDetails","iDs","baseUrl","Promise","race","map","result","console","log","getAllSuccessfulDetails","allSettled","results","num","value","getPhones","catch","error"],"mappings":";AAAA,aAGA,IAAMA,EAAW,mEAEXC,EAAU,SAACC,GACRC,OAAAA,MAASD,GAAAA,OAAAA,EAAT,UACJE,KAAK,SAAAC,GACA,IAACA,EAASC,GACN,MAAA,IAAIC,MAASF,GAAAA,OAAAA,EAASG,SAGvBH,OAAAA,EAASI,UAIhBC,EAAc,SAACC,GACbC,IAAAA,EAAa,GAMZA,OAJPD,EAAME,QAAQ,SAAAC,GACZF,EAAWG,KAAKD,EAAQE,MAGnBJ,GAGHK,EAA0B,SAACC,EAAKC,GACpCC,QAAQC,KAAKH,EAAII,IAAI,SAAAN,GAAMb,OAAAA,MAASgB,GAAAA,OAAAA,EAAWH,KAAAA,OAAAA,EAAxB,aACpBZ,KAAK,SAAAmB,GACGA,OAAAA,EAAOd,SAEfL,KAAK,SAAAmB,GAAUC,OAAAA,QAAQC,IAAIF,MAG1BG,EAA0B,SAACR,EAAKC,GACpCC,QAAQO,WAAWT,EAAII,IAAI,SAAAN,GAAMb,OAAAA,MAASgB,GAAAA,OAAAA,EAAWH,KAAAA,OAAAA,EAApB,UAC9BZ,KAAK,SAAAmB,GACGA,OAAAA,EAAOd,YAEfL,KAAK,SAAAwB,GACJA,EAAQf,QAAQ,SAACU,EAAQM,GACvBL,QAAQC,IAAOP,GAAAA,OAAAA,EAAIW,GAAsBN,kBAAAA,EAAOO,YAKlDC,EAAY,WAAM9B,OAAAA,EAAQD,IAEhC+B,IACG3B,KAAK,SAAAmB,GACEX,IAAAA,EAAaF,EAAYa,GAE/BN,EAAwBL,EAAYZ,GACpC0B,EAAwBd,EAAYZ,KAErCgC,MAAM,SAAAC,GAAST,OAAAA,QAAQC,IAAIQ,EAAO","file":"main.8037bf22.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\n// eslint-disable-next-line max-len\nconst basicURL = 'https://mate-academy.github.io/phone-catalogue-static/api/phones';\n\nconst request = (url) => {\n  return fetch(`${url}.json`)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(`${response.status}`);\n      }\n\n      return response.json();\n    });\n};\n\nconst getIDsArray = (array) => {\n  const arrayOfIds = [];\n\n  array.forEach(element => {\n    arrayOfIds.push(element.id);\n  });\n\n  return arrayOfIds;\n};\n\nconst getFirstReceivedDetails = (iDs, baseUrl) => {\n  Promise.race(iDs.map(id => fetch(`${baseUrl}/${id}.json`)))\n    .then(result => {\n      return result.json();\n    })\n    .then(result => console.log(result));\n};\n\nconst getAllSuccessfulDetails = (iDs, baseUrl) => {\n  Promise.allSettled(iDs.map(id => fetch(`${baseUrl}/${id}.json`)\n    .then(result => {\n      return result.json();\n    })))\n    .then(results => {\n      results.forEach((result, num) => {\n        console.log(`${iDs[num]} with details:`, result.value);\n      });\n    });\n};\n\nconst getPhones = () => request(basicURL);\n\ngetPhones()\n  .then(result => {\n    const arrayOfIds = getIDsArray(result);\n\n    getFirstReceivedDetails(arrayOfIds, basicURL);\n    getAllSuccessfulDetails(arrayOfIds, basicURL);\n  })\n  .catch(error => console.log(error, 'Error has occured!'));\n"]}